Вопросы на прояснение у куратора:
- Пункт 5.9 ТЗ - должны ли фильтры блокироваться каждый раз при загрузке обьявлений?

(ЗАФЕЙЛЕН) - исправлено
Б1: Соответствие ТЗ 
- Есть сломанный UX который позволяет нарушить ТЗ
- Пункт 6.1 не сделан, feature не реагирует на Enter, только клик.

Комментарии:
- Нет индикатора загрузки при публикации обьявления (В ТЗ не указано но ломает UX)
- Кнопка отправки формы не блокируется если запрос уже отправлен, у меня из за VPN загрузка был 10 секунд, за это время я наспамил ещё два запроса.
- Вследствие этого можно получить на странице более одного элемента `.success`, я в итоге не смог их закрыть по ESC.
- Сообщение о невалидном значении поля "Цена за ночь", для квартиры есть слова "за ночь" в остальных нет. Не целостный подход (Плохой UX)

(ЗАФЕЙЛЕН) - исправлено
Б2: Необработанные ошибки
- Баг с отправкой формы этот критерий тоже фейлит

Б3. Названия переменных, параметров, свойств и методов начинаются со строчной буквы и записываются в нотации lowerCamelCase.

Б4. Для названия значений используются английские существительные.

Б5. Массивы названы существительными во множественном числе.

Б6. Название функции или метода содержит глагол.

Б7. Названия констант (постоянных значений) написаны прописными (заглавными) буквами.

(ЗАФЕЙЛЕН) - исправлено
Б8. Название конструкторов и перечислений начинается с заглавной буквы. В названии используются английские существительные. Значения перечислений объявлены как константы.

Б9. Используются обязательные блоки кода.

Б10. Список констант идёт перед основным кодом.

Б11. Код соответствует стилю оформления, принятому на проекте 

Б12. В итоговом коде проекта находятся только те файлы, которые были на момент создания репозитория, которые были получены в патчах и файлы, созданные по заданию.

Б13. В коде проекта нет файлов, модулей и частей кода, которые не используются, включая закомментированные участки кода.

Б14. В коде нет заранее недостижимых участков кода.

Б15. Константы нигде в коде не переопределяются.

Б16. Включён строгий режим (ESLint).

Б17. Используются строгие сравнения вместо нестрогих (ESLint).

Б18. В коде не используются зарезервированные слова в качестве имён переменных и свойств.

Б19. Все скрипты подключаются через файл index.html.

Б20. Все файлы JS представляют собой отдельные модули в IIFE.
УниверсальностьРазвернуть все

Б21. Код является кроссбраузерным и не вызывает ошибок в разных браузерах и разных операционных системах.

Б22. Нельзя пользоваться глобальной переменной event.

Б23. Своевременный выход из цикла: цикл не работает дольше чем нужно.

Б24. Количество вызовов циклов минимизировано.

Б25. Множественные DOM-операции производятся на элементах, которые не добавлены в DOM.

Б26. Обработчики событий добавляются и удаляются своевременно.

Б27. Для вставки пользовательских строк (имён, фамилий и так далее) использован textContent.

Д1. Техническое задание реализовано в полном объёме.

Д2. Переменные носят абстрактные названия и не содержат имён собственных.

Д3. Название методов и свойств объектов не содержит название объектов.

Д4. Из названия обработчика события и функции-коллбэка следует, что это обработчик.

Д5. Все функции объявлены единообразно.

Д6. Используется единый стиль именования переменных.

Д7. При использовании встроенного API, который поддерживает несколько вариантов использования, используется один способ.

Д8. API встроенных функций и объектов используется правильно.

Д9. Отсутствуют потенциально некорректные операции.

Д10. В случае, если одинаковый код повторяется в нескольких модулях, повторяющаяся часть вынесена в отдельный модуль.

Д11. При экспорте из одного модуля нескольких значений используется пространство имён.

Д12. Во всех модулях для ограничения области видимости используются IIFE и только они.

Д13. В проекте не должно быть избыточных проверок.

Д14. Отсутствует дублирование кода: повторяющиеся части кода переписаны как функции.

Д15. Если при использовании условного оператора в любом случае возвращается значение, альтернативная ветка опускается.

Д16. Отсутствуют лишние приведения и проверки типов.

Д17. Там, где возможно, в присвоении значения вместо if используется тернарный оператор.

Д18. Условия упрощены.

Д19. В коде не используются «магические значения», под каждое из них заведена отдельная переменная, названная как константа.

Д20. Константы, используемые внутри функций, создаются вне функций и используются повторно через замыкания.

Д21. Поиск элементов по селекторам делается минимальное количество раз, после этого ссылки на элементы сохраняются.

Д22. Массивы и объекты, содержимое которых вычисляется, собираются один раз, а после этого только переиспользуются.

Д23. Изменения применяются точечно.

Д24. Для каждого события используется отдельный обработчик.

Д25. Длинные функции и методы разбиты на несколько небольших.

Д26. Для работы с JS-коллекциями используются итераторы для массивов.

Д27. Оператор присваивания не используется как часть выражения.